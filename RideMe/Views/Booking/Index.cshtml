@model List<RideMe.Models.Booking>

@using Microsoft.AspNetCore.Identity;
@using RideMe.Data;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Booking";
}

@{
    //Get the user Id
    var user = await UserManager.GetUserAsync(User);
    var userId = user.Id;
}


<div class="container my-5">
    @*@if (User.IsInRole("Admin"))
    {
        <form action="controller" method="get" class="d-md-flex d-sm-block justify-content-between">
            <input type="hidden" name="command" value="select-orders">
            <h1 class="h5 align-self-center col-3">Search Booking</h1>
            <div class="btn-group align-self-center col-12 col-sm-12 col-md-8 col-lg-6">
                <select name="searchType" class="btn btn-outline-dark col-3 col-sm-3">
                    <option value="orderId">Order ID</option>
                    <option value="created">Created</option>
                    <option value="customer">Customer</option>
                    <option value="status">Status</option>
                </select>
                <input type="search" name="searchBy" class="col-6 col-sm-6">
                <input type="submit" value="Search" class="btn btn-outline-dark col-3 col-sm-3">
            </div>
        </form>
    }*@
   
    <div class="d-flex  justify-content-md-between justify-content-center align-items-center border-bottom border-2 my-2 bg-dark text-light p-3 rounded-3">
        <div class="col-2  align-self-center  ">
            <h1 class="h5 fw-bold">Booking ID</h1>
        </div>
        <div class="col-2  align-self-center  ">
            <h1 class="h5 fw-bold">Pickup location</h1>
        </div>
        <div class="col-2  align-self-center  ">
            <h1 class="h5 fw-bold">Pickup Dat</h1>
        </div>
        <div class="col-2  align-self-center  ">
            <h1 class="h5 fw-bold">Return Date</h1>
        </div>
        <div class="col-2  align-self-center  ">
            <h1 class="h5 fw-bold">Show details</h1>
        </div>
        <div class="col-2  align-self-center  ">
            <h1 class="h5 fw-bold">Status</h1>
        </div>

    </div>

    @foreach (var booking in Model)
    {
        <div class="d-flex justify-content-md-between justify-content-sm-center text-center border-bottom border-2 my-2 bg-light p-2 rounded-3">
            <div class="col-2 text-sm-center text-md-start align-self-center my-2">
                <h1 class="h6">@booking.Id</h1>
            </div>
            <div class="col-2 text-sm-center text-md-start align-self-center my-2">
                <h1 class="h6">@booking.Rentals.PickupLocation</h1>
            </div>
            <div class="col-2 text-sm-center text-md-start align-self-center my-2">
                <h1 class="h6">@booking.Rentals.PickupDate.ToShortDateString() | @booking.Rentals.PickupTime.ToString("hh\\:mm") </h1>
            </div>
            <div class="col-2 text-sm-center text-md-start align-self-center my-2">
                <h1 class="h6">@booking.Rentals.ReturnDate.ToShortDateString() | @booking.Rentals.ReturnTime.ToString("hh\\:mm")</h1>
            </div>
            <div class="col-1 text-sm-center text-md-start align-self-center my-2">
                <a class="btn btn-outline-dark w-100" href="#">Details</a>
            </div>
            <div class="col-3 text-sm-center text-md-start align-self-center my-2">
                <form method="get" action="controller" class="d-flex btn-group">
                    <input type="hidden" name="command" value="refresh-order-status">
                    <select name="status" class="col-8 btn btn-outline-dark">

                        <option value="PAID" class="form-select-button">EDIT</option>
                        <option value="CANCELED" class="form-select-button">CANCELED</option>
                    </select>
                    <input type="submit" class="col-4 btn btn-outline-dark" value="OK">
                </form>
            </div>
        </div>
    }

    @*@if (User.IsInRole("Admin"))
    {


    }
    else
    {
        @foreach (var booking in Model)
        {
            <div class="d-flex justify-content-md-between justify-content-sm-center text-center border-bottom border-2 my-2 bg-light p-2 rounded-3">
                <div class="col-2 text-sm-center text-md-start align-self-center my-2">
                    <h1 class="h6">@booking.Id</h1>
                </div>
                <div class="col-2 text-sm-center text-md-start align-self-center my-2">
                    <h1 class="h6">@booking.Rentals.PickupLocation</h1>
                </div>
                <div class="col-2 text-sm-center text-md-start align-self-center my-2">
                    <h1 class="h6">@booking.Rentals.PickupDate.ToShortDateString() | @booking.Rentals.PickupTime.ToString("hh\\:mm") </h1>
                </div>
                <div class="col-2 text-sm-center text-md-start align-self-center my-2">
                    <h1 class="h6">@booking.Rentals.ReturnDate.ToShortDateString() | @booking.Rentals.ReturnTime.ToString("hh\\:mm")</h1>
                </div>
                <div class="col-1 text-sm-center text-md-start align-self-center my-2">
                    <a class="btn btn-outline-dark w-100" href="#">Details</a>
                </div>
                <div class="col-3 text-sm-center text-md-start align-self-center my-2">
                    <form method="get" action="controller" class="d-flex btn-group">
                        <input type="hidden" name="command" value="refresh-order-status">
                        <select name="status" class="col-8 btn btn-outline-dark">

                            <option value="PAID" class="form-select-button">EDIT</option>
                            <option value="CANCELED" class="form-select-button">CANCELED</option>
                        </select>
                        <input type="submit" class="col-4 btn btn-outline-dark" value="OK">
                    </form>
                </div>
            </div>
        }
        
    }*@

    

    
</div>
        
            